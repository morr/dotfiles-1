#!/usr/bin/env ruby

require 'fileutils'
require 'open-uri'

git_bundles = %w[
  airblade/vim-gitgutter
  ap/vim-css-color
  bkad/CamelCaseMotion
  ctrlpvim/ctrlp.vim
  easymotion/vim-easymotion
  elixir-lang/vim-elixir
  ervandew/supertab
  flazz/vim-colorschemes
  jeetsukumaran/vim-buffergator
  kchmck/vim-coffee-script
  keith/rspec.vim
  mhinz/vim-hugefile
  plasticboy/vim-markdown
  scrooloose/nerdcommenter
  scrooloose/nerdtree
  scrooloose/syntastic
  slim-template/vim-slim
  tap349/ag.vim
  tpope/vim-endwise
  tpope/vim-fugitive
  tpope/vim-rails
  tpope/vim-surround
  tpope/vim-unimpaired
  vim-airline/vim-airline
  vim-airline/vim-airline-themes
  vim-ruby/vim-ruby
  xolox/vim-misc
  yssl/QFEnter
]

# Yggdroot/indentLine
# briancollins/vim-jst
# cakebaker/scss-syntax.vim
# jamessan/vim-gnupg
# kien/ctrlp.vim
# majutsushi/tagbar
# scheakur/vim-scheakur
# tpope/vim-projectionist
# xolox/vim-session
# wincent/command-t

git_keep = []

bundles_dir = File.join(File.dirname(__FILE__), 'bundle')

FileUtils.mkdir bundles_dir unless File.exist? bundles_dir
FileUtils.cd bundles_dir

puts "trashing everything..."

Dir['*'].each { |d| FileUtils.rm_rf d unless git_keep.include?(d) }

puts "fetching plugins..."

git_bundles.each do |plugin|
  url = "git://github.com/#{plugin}"
  dir = url.split('/').last

  puts "  Unpacking #{url} into #{dir}"
  %x{git clone #{url} #{dir}}
  FileUtils.rm_rf File.join(dir, ".git")
end

#puts "compiling command-t..."

#command_t_path = File.join 'command-t', 'ruby', 'command-t'
#rbenv_init_script = 'eval "$(rbenv init -)"'
## https://langui.sh/2014/03/10/wunused-command-line-argument-hard-error-in-future-is-a-harsh-mistress
##environment = 'ARCHFLAGS="-Wno-error=unused-command-line-argument-hard-error-in-future"'
## NOTE: run `ruby extconf.rb` prior to `make clean`: the former generates
##       Makefile that contains target clean for the latter.
##       there is some problem with setting system ruby by `rbenv shell system`
##       (https://github.com/rbenv/rbenv/issues/121) - use absolute path to
##       system ruby instead.
#command_t_build_script = '/usr/bin/ruby extconf.rb && make clean && make'

#puts `zsh -c 'cd #{command_t_path} && #{rbenv_init_script} && #{command_t_build_script}'`
